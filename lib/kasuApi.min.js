"use strict";const Parser=require("./src/Parser"),{log:log,error:error}=require("console"),{connect:connect}=require("http2");let Debug=!1;class Main{#t;constructor(t,e,n){this.url=e||"https://nhentai.net",this.#t,this.IsDiscord=!1,this.blockedWords="",this.ReRollonFail=!1,this.IgnoreNone=!1,this.connection={start:t=>{1==t&&(log("Connection is started!"),log(`Connection: ${this.url}`)),this.#t?error("WARN ERROR: Connection is already made."):this.#t=connect(this.url)},close:t=>{if(1==t&&log("Connection is closed!"),!this.#t)throw"ERROR: No connection is made.";this.#t.close()}},t&&"start"==t.toLowerCase()&&(1==n&&(log("Connection is started!"),log(`Connection: ${this.url}`)),this.#t=connect(this.url))}#e(t){return Math.random()*t<<0}#n(t,e){return t.replace(/ /g,e)}async#r(t,e,n){return e||(e=""),e=/\.net/.test(this.url)?n?`${this.url}/${t}/?q=${e}/`:`${this.url}/${t}/${e}/`:n?`${this.url}/${t}?q=${e}`:`${this.url}/${t}/${e}`,await Parser.page(1,e,this.#t)}async#a(t,e,n){const r=this.#e(t[0].TotalPage),a=t[0].CurrentUrl;let s=await Parser.page(r,a,this.#t);s.shift();const i=this.#e(s.length);try{let t=await Parser.book(s[i].url,this.#t,n,this.IgnoreNone,this.blockedWords,this.IsDiscord,this.ReRollonFail);return e?e(t):t}catch(r){if(this.ReRollonFail&&!/DISCORD ToS: REROLL DENIED/.test(r))return this.#a(t,e,n);throw r}}async pRandSpecificTags(t,e){t=this.#n(t,"+");const n=await this.#r("search",t,!0);return n?this.#a(n,e):n}pRandTag(t,e){return this.#s(t,e,"tag")}pRandParody(t,e){return this.#s(t,e,"parody")}pRandArtist(t,e){return this.#s(t,e,"artist")}pRandGroup(t,e){return this.#s(t,e,"group")}async#s(t,e,n){t=this.#n(t,"-");const r=await this.#r(n,t);return r?this.#a(r,e,t):r}getID(t){if(/https:\/\/nhentai/.test(t)&&!(t=+t.replace(`${this.url}/g/`,"").replace("/","")))throw"ERROR: \n    \n                1. You are trying to access a different domain. Please change the URL on the constructor.\n                2. Entered link is Invalid.\n                \n                NOTE: If you are using a full link string please check if the domain matches the URL on the constructor.\n                \n                ";return"number"!=typeof t&&(t=+t),{json:async e=>{const n=await Parser.book(`${this.url}/g/${t}/`,this.#t,null,this.IgnoreNone,this.blockedWords,this.IsDiscord,null);return e?e(n):n}}}async pRandom(t){try{let e=await Parser.book(`${this.url}/random`,this.#t,null,this.IgnoreNone,this.blockedWords,this.IsDiscord,this.ReRollonFail);return t?t(e):e}catch(e){return this.pRandom(t)}}async pRandID(){return(await Parser.book(`${this.url}/random`,this.#t,null,this.IgnoreNone)).id}async pHomepage(t){return await Parser.page(t,this.url,this.#t)}async pLanguagePage(t,e){if(/translated|english|japanese|chinese|eng|japan|china|jp/.test(t)){switch(t){case"eng":case"en":t="english";break;case"japan":case"jp":t="japanese";break;case"china":t="chinese"}return t=`${this.url}/language/${t}/`,await Parser.page(e,t,this.#t)}throw this.#t.close(),"ERROR: Invalid language (except: translated) lol"}async pSearch(t,e){try{t=this.#n(t,"+")}catch(t){}return t=/\.net/.test(this.url)?`${this.url}/search/?q=${t}/`:`${this.url}/search?q=${t}`,await Parser.page(e,t,this.#t)}async pTagPage(t,e){try{t=this.#n(t,"+")}catch(t){}return t=/\.net/.test(this.url)?`${this.url}/tag/?q=${t}/`:`${this.url}/tag/?q=${t}`,await Parser.page(e,t,this.#t)}}module.exports=Main;
