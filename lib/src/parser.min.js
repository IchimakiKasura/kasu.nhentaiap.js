"use strict";const{constants:constants,connect:connect}=require("http2"),{log:log,error:error}=require("console");let Debug=!1;class fetcher{static options={[constants.HTTP2_HEADER_SCHEME]:"https",[constants.HTTP2_HEADER_METHOD]:constants.HTTP2_METHOD_GET,[constants.HTTP2_HEADER_PATH]:""};static sleep(e){return new Promise(((t,a)=>{setTimeout(t,e)}))}static parseURLtoPath(e){Debug&&log(`[LN21 parser] ${e}\n`);let t=(e=new URL(e)).pathname+e.search;return e.host.match(/\.to/)&&t.match(/search/)&&(t=`/${t.replace(/\//g,"")}`),t}static retry(e){return new Promise(((t,a)=>{let s,r="";e.request(this.options).on("response",(async a=>{s=a[":status"],Debug&&log(`[LN40 parser] retry: ${s}`),s>300&&s<400&&(this.options[constants.HTTP2_HEADER_PATH]=a.location,t(await this.retry(e)))})).on("data",(e=>{r+=e})).on("end",(()=>{200==s&&(Debug&&log("[LN50 parser] fetch-retry: success"),t(r.replace("undefined","")))})).end()}))}static fetcher(e,t){let a,s,r=this.parseURLtoPath(e);return this.options[constants.HTTP2_HEADER_PATH]=r,new Promise(((e,r)=>{t||r("ERROR: No connection is made"),t.request(this.options).on("response",(async a=>{if(s=a[":status"],Debug&&log(`[LN68 parser] fetch: ${s}`),404==s)throw"No results were found!";s>410&&(await this.sleep(a[":retry-after"]),e(await this.retry(t))),s>300&&s<400&&(this.options[constants.HTTP2_HEADER_PATH]=a.location.replace("https://nhentai.to",""),e(await this.retry(t)))})).setEncoding("utf8").on("data",(e=>{a+=e})).on("end",(()=>{200==s&&(Debug&&log("[LN87 parser] fetch: success"),e(a.replace("undefined","")))})).end()}))}}class Matcher extends fetcher{static bookThumbRegex=/<img.*data-src="(?<thumbs>.*?)".*?src=".*?" \/>/;static bookTimeRegex=/<time (.*)>(?<date>.*)<\/time>/;static errorRegex=/<h2>[0|No] [r|R]esults/;static kageBunshinJustu(e){let t=e.match(this.bookTimeRegex).groups.date,a=e.match(this.bookThumbRegex).groups.thumbs,s=a.replace("/cover.jpg","");return{time:t,thumbnail:a,img_source:s}}static async BOOKInfoMatcherNET(e,t){let a=await this.fetcher(e,t),s=JSON.parse(JSON.parse(`"${a.match(/JSON\.parse\((.*)\)/)[0].replace(/JSON\.parse\("/g,"").slice(0,-2)}"`)),{time:r,img_source:c,thumbnail:o}=this.kageBunshinJustu(a);return{body:s,time:r,img_source:c,thumbnail:o}}static async PAGEInfoMatcherNET(e,t){let a,s=await this.fetcher(e,t);try{a=s.match(/<a.[a-z]*="(.*?)".[a-z]*="(.*?)">/g).slice(-1)[0].replace(/\D+/g,"").slice(1)}catch(e){a=1}return{body:s.match(/<div class="gallery".*?data-tags="(.*?)"><a href="\/g\/(.*?)\/".*?data-src="(.*?)".*?caption">(.*?)</g),totalPage:a}}static async BOOKInfoMatcherTO(e,t){let a=await this.fetcher(e,t),s=JSON.parse(a.replace(/[\n|\r]+|  +/g," ").match(/N\.gallery\({.*}\)/)[0].replace(/N\.gallery\(/,"").slice(0,-5)+"}"),{time:r,img_source:c,thumbnail:o}=this.kageBunshinJustu(a);return{body:s,time:r,img_source:c,thumbnail:o}}static async PAGEInfoMatcherTO(e,t){let a,s=await this.fetcher(e,t);try{a=s.replace(/[\n|\r]+|\B\s+|\s+\B/g," ").match(/<\/i><\/a>.*<a href=".*?page=(.*?)"/)[0].replace(/\D+/g,"")}catch(e){a=1}return{body:s.replace(/[\n|\r]+|\B\s+|\s+\B/g," ").match(/<div class="gallery" data-tags="(.*?)".*?href="\/g\/(.*?)\/".*?src="(.*?)".*?">(.*?)</gs),totalPage:a}}}class Parser extends Matcher{static tagRegex=/https:\/\/nhentai\.(to|net)|\/language|\/tag|\/character|\/artist|\/parody|\/group|\/category|\//g;static URLregex=/language\/.*|tag\/.*|character\/.*|artist\/.*|parody\/.*|group\/.*|category\/.*|(search\/|search\?q=).*|\?q=.*/;static blockedRegex=/lolicon|shotacon|beastiality|torture|minigirl|blood|guro|cannibalism|shota|loli/;static async book(url,client,userString,IgnoreNone,blockedWords,IsDiscord,RRoF){let text;if(blockedWords){if("number"==typeof blockedWords)throw"ERROR: 'blockedWords' cannot contain such numbers, It must contain strings.";blockedWords=blockedWords.split(/ |,/g).filter((e=>e)),this.blockedRegex=new RegExp(this.blockedRegex.source.replace("|loli",`|loli|${blockedWords.join("|")}`))}let data="",Time,img_Source,Thumbnail;if(/\.net/.test(url))try{const{body:e,time:t,img_source:a,thumbnail:s}=await this.BOOKInfoMatcherNET(url,client);data=e,Time=t,img_Source=a,Thumbnail=s}catch(e){return log("[LN178 parser] FAILED"),e}else try{const{body:e,time:t,img_source:a,thumbnail:s}=await this.BOOKInfoMatcherTO(url,client);data=e,Time=t,img_Source=a,Thumbnail=s}catch(e){return e}let parodies="",chr="",tags="",Artist="",Groups="",Lang="",Ctg="";for(let e=0;e<data.tags.length;e++)switch(data.tags[e].type){case"tag":if(tags+=`${data.tags[e].name}, `,IsDiscord&&((this.blockedRegex.test(tags)||this.blockedRegex.test(userString))&&(text="DISCORD ToS: The doujin picked has a Tag that isn't allowed on Discord\n",RRoF&&this.blockedRegex.test(userString)&&(text="DISCORD ToS: REROLL DENIED\n")),text))throw text;break;case"charachter":chr+=`${data.tags[e].name}, `;break;case"parody":parodies+=`${data.tags[e].name}, `;break;case"artist":Artist+=`${data.tags[e].name}, `;break;case"language":Groups+=`${data.tags[e].name}, `;break;case"category":Lang+=`${data.tags[e].name}, `;break;case"group":Ctg+=`${data.tags[e].name}, `}parodies&&(parodies=parodies.slice(0,-2)),chr&&(chr=chr.slice(0,-2)),tags&&(tags=tags.slice(0,-2)),Artist&&(Artist=Artist.slice(0,-2)),Groups&&(Groups=Groups.slice(0,-2)),Lang&&(Lang=Lang.slice(0,-2)),Ctg&&(Ctg=Ctg.slice(0,-2)),/random/.test(url)&&(url=url.replace("random","g/")+data.id);let list={id:data.id,url:url,title:{origin:data.title.japanese.replace(/\[.*?\]|\(.*?\)/g,"").trim(),translated:data.title.english.replace(/\[.*?\]|\(.*?\)/g,"").trim(),originFull:data.title.japanese,translatedFull:data.title.english},images:{cover:Thumbnail,pages_source:img_Source,pages:e=>e>pages?`That page doesn't exist!\n The total pages are only '${pages}'`:`${img_Source}/${e}.jpg`},tag_table:{parodies:parodies||"none",characters:chr||"none",tag:tags||"none",artist:Artist||"none",groups:Groups||"none",languages:Lang||"none",categories:Ctg||"none"},favorites:data.num_favorites||"none",number_pages:data.num_pages,uploaded:Time};if(IgnoreNone)for(let keys of Object.entries(list))if("object"==typeof keys[1])for(let yet of Object.entries(eval(`list.${keys[0]}`)))"none"==yet[1]&&eval(`delete list.${keys[0]}.${yet[0]}`);return list}static async page(e,t,a){let s,r;e&&0!=e||(e=1);let c=`${t}?page=${e}`;if(/search/.test(t)&&(c=`${t}&page=${e}`),log(c),/\.net/.test(t))try{const{body:e,totalPage:t}=await this.PAGEInfoMatcherNET(c,a);s=e,r=+t}catch(e){return e}else try{const{body:e,totalPage:t}=await this.PAGEInfoMatcherTO(c,a);s=e,r=+t}catch(e){return e}let o=[{CurrentUrl:t,typePage:"homepage",CurrentPage:e,Total:s.length,TotalPage:r}];s.forEach((e=>{let a=+e.match(/href="\/g\/(.*?)\/"/)[1],s=e.match(/data-tags="(.*?)"/)[1].split(" "),r="";s.forEach((e=>{if(/\.net/.test(t))switch(e){case"6346":r+="japansese, ";break;case"29963":r+="chinese, ";break;case"12227":r+="english, ";break;case"17249":r+="translated, "}else switch(e){case"2":r+="japansese, ";break;case"10197":r+="chinese, ";break;case"19":r+="english, ";break;case"17":r+="translated, "}})),o.push({id:a,title:e.match(/caption">(.*?)</)[1],thumbnail:e.match(/data-src="(.*?)"/)[1],url:`${t.replace(this.URLregex,"")}g/${a}`,languages:r.slice(0,-2)})}));let i=["language","tag","character","artist","parody","group","category"];for(let e=0;e<i.length;e++)new RegExp(i[e]).test(t)&&(o[0].typePage=`${i[e]} / ${t.replace(this.tagRegex,"")}`);return/search/.test(t)&&(o[0].typePage="search / "+t.replace(/https:\/\/nhentai\.(to|net)\/search|\?q=|\/|&/g,"")),o}}module.exports=Parser;
